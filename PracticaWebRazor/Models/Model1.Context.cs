//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracticaWebRazor.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EjemploABMDB : DbContext
    {
        public EjemploABMDB()
            : base("name=EjemploABMDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
    
        public virtual int BorrarCliente(string apellido, string nombre)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarCliente", apellidoParameter, nombreParameter);
        }
    
        public virtual int BorrarProducto(string nombre, string marca)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarProducto", nombreParameter, marcaParameter);
        }
    
        public virtual ObjectResult<BuscarCliente_Result> BuscarCliente(string apellido, string nombre)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarCliente_Result>("BuscarCliente", apellidoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<BuscarClientesPorNom_Result> BuscarClientesPorNom(string apellido, string nombre)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarClientesPorNom_Result>("BuscarClientesPorNom", apellidoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<BuscarProducto_Result> BuscarProducto(string nombre, string marca)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarProducto_Result>("BuscarProducto", nombreParameter, marcaParameter);
        }
    
        public virtual ObjectResult<ConsultaClientes_Result> ConsultaClientes(string apellido, string nombre)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultaClientes_Result>("ConsultaClientes", apellidoParameter, nombreParameter);
        }
    
        public virtual int GuardarCliente(string apellido, string nombre, Nullable<int> edad)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarCliente", apellidoParameter, nombreParameter, edadParameter);
        }
    
        public virtual int GuardarProducto(string nombre, string marca, Nullable<decimal> precio)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarProducto", nombreParameter, marcaParameter, precioParameter);
        }
    
        public virtual int ModificarCliente(string apellidoV, string nombreV, string apellidoN, string nombreN, Nullable<int> edadN)
        {
            var apellidoVParameter = apellidoV != null ?
                new ObjectParameter("ApellidoV", apellidoV) :
                new ObjectParameter("ApellidoV", typeof(string));
    
            var nombreVParameter = nombreV != null ?
                new ObjectParameter("NombreV", nombreV) :
                new ObjectParameter("NombreV", typeof(string));
    
            var apellidoNParameter = apellidoN != null ?
                new ObjectParameter("ApellidoN", apellidoN) :
                new ObjectParameter("ApellidoN", typeof(string));
    
            var nombreNParameter = nombreN != null ?
                new ObjectParameter("NombreN", nombreN) :
                new ObjectParameter("NombreN", typeof(string));
    
            var edadNParameter = edadN.HasValue ?
                new ObjectParameter("EdadN", edadN) :
                new ObjectParameter("EdadN", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarCliente", apellidoVParameter, nombreVParameter, apellidoNParameter, nombreNParameter, edadNParameter);
        }
    }
}
